@model Entity.Category
@{
    Layout = "~/Areas/backofis/Views/Shared/_Layout.cshtml";
}

<!--INSERT OR UPDATE MODAL-->
<div class="modal fade" id="InsertUpdateModal">
    <div class="modal-dialog modal-m">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Yeni Kayıt</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="InsertOrUpdateModalBody"></div>

            </div>

        </div>
    </div>
</div>

<!--DELETE MODAL-->
<div class="modal fade" id="DeleteModal">
    <div class="modal-dialog modal-m">
        <div class="modal-content ">
            <div class="modal-body">


            </div>
            <div class="modal-footer justify-content-end">
                <button type="button" class="btn btn-sm bg-danger" data-dismiss="modal">Kapat</button>
                <button type="button" id="DeleteModalOkButton" class="btn btn-sm bg-primary ">Onayla ve Sil</button>

            </div>
        </div>
    </div>
</div>


<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Dil Seçenekleri</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body font-italic">
                        Dil verilerini ekleyin, güncelleyin veya silin.
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Dil Verileri</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <table id="categoryTable" class="table table-bordered " style="width:100%">
                        </table>
                    </div>
                    <!-- /.card-body -->
                </div>
            </div>
        </div>
    </div>
</section>
@{
    Html.RenderPartial("/Areas/backofis/Views/Shared/Partial/_DataTablesJsFilesImplementation.cshtml");
}
<script>
    var table;
    var activeRow;
    var insertOrUpdateModal = $('#InsertUpdateModal');
    var deleteModal = $('#DeleteModal');
    $(function () {
        var columns = [
            { data: 'id', visible: false },
            { data: 'categoryName', title: 'Kategori Adı' },
            { data: 'topCategoryName', title: 'Üst Kategori' },
            { data: 'description', title: 'Açıklama' },
            {
                data: 'isActive', title: 'Aktif mi ?',/*
                render: function (data, type, row) {

                    switch (data) {
                        case true:
                            return 'Aktif';
                            break;
                        case false:
                            return 'Pasif';
                            break;
                        default:
                            return data;
                    }
                },*/
                "createdCell": function (td, cellData, rowData, row, col) {
                    if (cellData == false) {
                        $(td).addClass("is-false");
                        $(td).html("Pasif");


                    }
                    else if (cellData == true) {
                        $(td).html("Aktif");
                        $(td).addClass("is-true");
                    }
                }
            },
            {
                data: "id",
                title: "İşlem",
                className: 'webbuilder-datatable-buttons-header',
                render: function (id, type, data, realRow) {
                    console.log(id)
                    console.log(type)
                    console.log(data)
                    console.log(realRow)
                    return "<div class='webbuilder-datatable-buttons-container'> <button type='button' onclick='DeleteRecord(" + realRow.row + ")' class='webbuilder-datatable-buttons btn  btn-danger btn-xs'>Sil</button>" +
                        "<button type='button' onclick='UpdateRow(" + realRow.row + ")' class='btn webbuilder-datatable-buttons btn-primary btn-xs'>Güncelle</button></div>";
                }
            }
        ];
        table = DataTable("categoryTable", "/backofis/category/getlist", "get", columns);
    })
    function OpenNewRecordModal() {

        LoadPage("/backofis/category/add", "GET", "#InsertOrUpdateModalBody", function () { insertOrUpdateModal.modal("toggle") });

    }
    function DeleteRecord(row) {
        if (row == null || row == undefined) {
            toastr["error"](" Tablodaki veriye erişim hatası", "Veri Erişim");
        }
        else {
            var itemName = table.row(row).data().name;
            var itemId = table.row(row).data().id;
            var modalContentContainer = $('#DeleteModal .modal-body');
            modalContentContainer.html("Dil Adı : " + itemName + "<br> Silmek üzeresiniz. Bu işlemi onaylıyormusunuz ?")
            deleteModal.modal("toggle");
            $('#DeleteModalOkButton').attr('onclick', "DeleteRow(" + itemId + ")");
        }
    }
    function DeleteRow(id) {
        $.ajax({
            url: "Delete",
            type: "POST",
            data: { id: id },
            cache: false,
            success: function (json) {
                if (json.statusCode === 200) {
                    toastr["success"](json.message, "Başarılı")
                    table.ajax.reload();
                }
                else if (json.statusCode === 500) {
                    toastr["error"](json.message, "Sunucu tabanlı hata")

                }
                deleteModal.modal("toggle");
                return json.data;
                $(location).html(response);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                toastr["error"]("Sunucuda hata oluştu.", "İletişim Hatası !")
            }
        });
    }
    function UpdateRow(row) {
        if (row == null || row == undefined) {
            toastr["error"](" Tablodaki veriye erişim hatası", "Veri Erişim");
        }
        else {
            var itemId = table.row(row).data().id;
            LoadPage("/backofis/language/Update", "GET", "#InsertOrUpdateModalBody",
                function () {
                    insertOrUpdateModal.modal("toggle")
                },
                { id: itemId });
        }
    }





</script>

